name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2.0.2
        with:
          bun-version: "1.3.0"

      - name: Cache Bun dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # Nx Cloud distributed execution (optional)
      # Requires VCS integration configured at: https://cloud.nx.app
      # If not configured, this step will be skipped and tasks run locally
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      - name: Start Nx Cloud CI Run
        run: bunx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"
        continue-on-error: true

      - run: bun install --frozen-lockfile
      - uses: nrwl/nx-set-shas@826660b82addbef3abff5fa871492ebad618c9e1 # v4.3.3

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: bun nx-cloud record -- echo Hello World

      - name: Generate coverage reports
        if: always()
        run: |
          echo "üìä Aggregating coverage reports from affected packages..."
          mkdir -p coverage-reports

          # Find all coverage directories and copy them
          find . -name "coverage" -type d -path "*/src/*/coverage" 2>/dev/null | while read -r coverage_dir; do
            package_name=$(echo "$coverage_dir" | sed 's|./src/\([^/]*\)/coverage|\1|')
            if [ -n "$package_name" ]; then
              echo "  ‚úì Found coverage for $package_name"
              mkdir -p "coverage-reports/$package_name"
              cp -r "$coverage_dir"/* "coverage-reports/$package_name/" 2>/dev/null || true
            fi
          done

          echo "‚úÖ Coverage aggregation complete"
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: coverage-reports
          path: coverage-reports/
          retention-days: 30
          if-no-files-found: ignore

      - name: Generate coverage summary
        if: always()
        run: |
          if [ -f ".github/scripts/generate-coverage-summary.ts" ]; then
            chmod +x .github/scripts/generate-coverage-summary.ts
            bun run .github/scripts/generate-coverage-summary.ts || echo "‚ö†Ô∏è Coverage summary generation failed"
          fi
        continue-on-error: true

      # Nx Cloud recommends fixes for failures to help you get CI green faster. Learn more: https://nx.dev/ci/features/self-healing-ci
      - run: bunx nx-cloud fix-ci
        if: always()
        continue-on-error: true
